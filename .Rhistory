install.packages("roxygen2")
roxygen2::roxygenise()
BinomialOptionModel::stock_development()
BinomialOptionModel::PlotTree()
roxygen2::roxygenise()
BinomialOptionModel::stock_development()
#' Stock Development
#' @noRd
stock_development <- function(S, n, u, d){
if(n == 0){
S_n <- S
}else{
S_n <- c(
stock_development(n = n - 1, u = u, d = d, S = S)*d,
stock_development(n = n - 1, u = u, d = d, S = S)*u
)
}
return(S_n)
}
roxygen2::roxygenize()
roxygen2::roxygenise()
BinomialOptionModel::Derivative_Security(1, 1, 1, (-(1/8)), (3/4), (5/4), "European_put")
BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
roxygen2::roxygenise()
warnings()
roxygen2::roxygenise()
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
BinomialOptionModel::PlotTree(option, what = "price")
roxygen2::roxygenise()
warnings()
roxygen2::roxygenise()
warnings
warnings()
warnings()
roxygen2::roxygenise()
warnings()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
BinomialOptionModel::PlotTree(option, what = "price")
roxygen2::roxygenise()
DiagrammeR::creat
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
BinomialOptionModel::PlotTree(option, what = "price")
library(BinomialOptionModel)
BinomialOptionModel::PlotTree(option, what = "price")
roxygen2::roxygenise()
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
BinomialOptionModel::PlotTree(option, what = "price")
library(dplyr)
BinomialOptionModel::PlotTree(option, what = "price")
option$derivative_prices
BinomialOptionModel::PlotTree(option, what = "delta")
option$delta
roxygen2::roxygenise()
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
BinomialOptionModel::PlotTree(option$delta)
option$delta
roxygen2::roxygenise()
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
library(BinomialOptionModel)
library(dplyr)
BinomialOptionModel::PlotTree(option$delta)
x <- option$delta
grph <- DiagrammeR::create_graph()
# Adding nodes
for (i in 1:nrow(x)) {
for (j in 1:(2^(i-1))) {
grph <- grph %>% DiagrammeR::add_node(label = paste0(i, ", ", j))
}
}
# Adding edges
for (i in 1:(nrow(x) - 1)) {
children  <- paste0(i + 1, ", ", 1:(2^i))
for (j in 1:(2^(i-1))) {
grph <- grph %>% DiagrammeR::add_edge(from = paste0(i, ", ", j), to = children[1], edge_aes = list(label = "T"))
grph <- grph %>% DiagrammeR::add_edge(from = paste0(i, ", ", j), to = children[2], edge_aes = list(label = "H"))
children <- children[3:length(children)]
}
}
# Changing labels to values
grph$nodes_df$label <- unlist(lapply(grph$nodes_df$label, function(x) {
(unlist(x[as.numeric(gsub(",.*", "", x)), as.numeric(gsub(".*,\\s*", "", x))]))
}))
grph$nodes_df$label
x <- grph$nodes_df$label
x
as.numeric(gsub(",.*", "", x))
x <- grph$nodes_df$label[1]
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
library(BinomialOptionModel)
library(dplyr)
BinomialOptionModel::PlotTree(option$delta)
x <- option$delta
grph <- DiagrammeR::create_graph()
# Adding nodes
for (i in 1:nrow(x)) {
for (j in 1:(2^(i-1))) {
grph <- grph %>% DiagrammeR::add_node(label = paste0(i, ", ", j))
}
}
# Adding edges
for (i in 1:(nrow(x) - 1)) {
children  <- paste0(i + 1, ", ", 1:(2^i))
for (j in 1:(2^(i-1))) {
grph <- grph %>% DiagrammeR::add_edge(from = paste0(i, ", ", j), to = children[1], edge_aes = list(label = "T"))
grph <- grph %>% DiagrammeR::add_edge(from = paste0(i, ", ", j), to = children[2], edge_aes = list(label = "H"))
children <- children[3:length(children)]
}
}
# Changing labels to values
grph$nodes_df$label <- unlist(lapply(grph$nodes_df$label, function(y) {
(unlist(x[as.numeric(gsub(",.*", "", y)), as.numeric(gsub(".*,\\s*", "", y))]))
}))
grph$nodes_df$label
# Plotting the graph
DiagrammeR::render_graph(graph = grph, layout = "tree")
roxygen2::roxygenise()
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
option
library(BinomialOptionModel)
library(dplyr)
BinomialOptionModel::PlotTree(option$delta)
BinomialOptionModel::PlotTree(option$derivative_prices)
roxygen2::roxygenise()
?BinomialOptionModel::Derivative_Security
?BinomialOptionModel::Derivative_Security(1, 4, 5, 0.03, 0.4, 0.6)
?BinomialOptionModel::Derivative_Security(1, 4, 5, 0.03, 0.4, 0.6)
BinomialOptionModel::Derivative_Security(1, 4, 5, 0.03, 0.4, 0.6)
BinomialOptionModel::Derivative_Security(1, 4, 5, 0.03, 0.4, 0.6, "European_call")
BinomialOptionModel::Derivative_Security(1, 4, 4, 0.03, 0.4, 0.6, "European_call")
option <- BinomialOptionModel::Derivative_Security(1, 4, 4, 0.03, 0.4, 0.6, "European_call")
BinomialOptionModel::PlotTree(option$derivative_prices)
option <- BinomialOptionModel::Derivative_Security(10, 4, 4, 0.03, 0.4, 0.6, "European_call")
BinomialOptionModel::PlotTree(option$derivative_prices)
BinomialOptionModel::PlotTree(option$delta)
option <- BinomialOptionModel::Derivative_Security(10, 4, 4, 0.03, 0.4, 0.6, "European_call")
option
option <- BinomialOptionModel::Derivative_Security(4, 7, 4, (1/4), (1/2), 2, "European_call")
BinomialOptionModel::PlotTree(option$delta)
BinomialOptionModel::PlotTree(option$derivative_prices)
BinomialOptionModel::PlotTree(option$delta)
BinomialOptionModel::PlotTree(option$derivative_prices)
BinomialOptionModel::PlotTree(option$delta)
BinomialOptionModel::PlotTree(option$derivative_prices)
BinomialOptionModel::PlotTree(option$delta)
